{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Options/Options.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImageIndex","setCurrentImageIndex","maxCurrentImage","length","className","style","width","transition","map","image","index","transform","src","alt","toString","type","onClick","prevIndex","Math","max","disabled","min","Options","state","setState","htmlFor","id","value","onChange","event","target","checked","initialState","App","ReactDOM","render","document","getElementById"],"mappings":"oPAqFeA,EAzEmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAkDC,mBAAS,GAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KAEMC,EAAkBT,EAAOU,OAASR,EAoBxC,OACE,sBACES,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKX,EAAYC,EAAjB,MACLW,WAAW,GAAD,OAAKV,EAAL,OAJd,UAOE,oBAAIO,UAAU,iBAAd,SACGX,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACV,oBAEEN,UAAU,iBACVC,MAAO,CACLM,UAAU,cAAD,QAAiBX,EAAoBJ,EAArC,OACTW,WAAW,GAAD,OAAKV,EAAL,OALd,SAQE,qBAAKe,IAAKH,EAAOI,KAAMH,EAAQ,GAAGI,WAAYR,MAAOV,KAPhDa,QAWX,sBAAKL,UAAU,oBAAf,UACE,wBACEW,KAAK,SACLC,QAjCU,WAEdf,EADwB,IAAtBD,EACmB,SAACiB,GAAD,OAAeC,KAAKC,IAAIF,EAAYvB,EAAM,IAE1CQ,IA8BjBkB,SAAgC,IAAtBpB,IAA4BF,EAHxC,kBAOA,wBACE,UAAQ,OACRiB,KAAK,SACLC,QAnDU,WAEdf,EADED,IAAsBE,EAEtB,SAACe,GAAD,OAAeC,KAAKG,IAAIJ,EAAYvB,EAAMQ,IAGvB,IA8CjBkB,SAAUpB,IAAsBE,IAAoBJ,EAJtD,yBCnDKwB,G,MAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,MACA9B,EAEI,EAFJA,OACA+B,EACI,EADJA,SAGE5B,EAKE2B,EALF3B,UACAD,EAIE4B,EAJF5B,UACAD,EAGE6B,EAHF7B,KACAG,EAEE0B,EAFF1B,kBACAC,EACEyB,EADFzB,SAGF,OACE,sBAAKM,UAAU,UAAf,UACE,wBAAOqB,QAAQ,SAASrB,UAAU,iBAAlC,wBAEE,uBACEA,UAAU,iBACVW,KAAK,SACLW,GAAG,SACHC,MAAO/B,EACPyB,IAAK,IACLF,IAAK,IACLzB,KAAM,GACNkC,SACE,SAACC,GAAD,OAAWL,EAAS,2BAAKD,GAAN,IAAa3B,WAAYiC,EAAMC,OAAOH,eAK/D,wBAAOF,QAAQ,UAAUrB,UAAU,iBAAnC,wBAEE,uBACEA,UAAU,iBACVW,KAAK,SACLW,GAAG,UACHC,MAAOhC,EACP0B,IAAK,EACLF,IAAK1B,EAAOU,OACZT,KAAM,EACNkC,SACE,SAACC,GAAD,OAAWL,EAAS,2BAAKD,GAAN,IAAa5B,WAAYkC,EAAMC,OAAOH,eAK/D,wBAAOF,QAAQ,SAASrB,UAAU,iBAAlC,kBAEE,uBACEA,UAAU,iBACVW,KAAK,SACLW,GAAG,SACHC,MAAOjC,EACP2B,IAAK,EACLF,IAAK1B,EAAOU,OACZT,KAAM,EACNkC,SACE,SAACC,GAAD,OAAWL,EAAS,2BAAKD,GAAN,IAAa7B,MAAOmC,EAAMC,OAAOH,eAK1D,wBAAOF,QAAQ,cAAcrB,UAAU,iBAAvC,+BAEE,uBACEA,UAAU,iBACVW,KAAK,SACLW,GAAG,cACHC,MAAO9B,EACPwB,IAAK,IACLF,IAAK,IACLzB,KAAM,IACNkC,SACE,SAACC,GAAD,OAAWL,EAAS,2BACbD,GADY,IACL1B,mBAAoBgC,EAAMC,OAAOH,eAMrD,wBAAOF,QAAQ,aAAarB,UAAU,iBAAtC,sBAEE,uBACEW,KAAK,WACLW,GAAG,aACHK,QAASjC,EACT8B,SAAU,kBAAMJ,EAAS,2BAAKD,GAAN,IAAazB,UAAWA,gBCvGpDL,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGIuC,EAAe,CACnBtC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,GA0BGmC,EAvBO,WACpB,MAA0BlC,mBAASiC,GAAnC,mBAAOT,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKpB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCX,EAAOU,OAA1C,aAEA,cAAC,EAAD,aACEV,OAAQA,GACJ8B,IAGN,cAAC,EAAD,yBACE9B,OAAQA,EACR8B,MAAOA,GACHA,GAHN,IAIEC,SAAUA,SCxClBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fd8444d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const maxCurrentImage = images.length - frameSize;\n\n  const nextImage = () => {\n    if (currentImageIndex !== maxCurrentImage) {\n      setCurrentImageIndex(\n        (prevIndex) => Math.min(prevIndex + step, maxCurrentImage),\n      );\n    } else {\n      setCurrentImageIndex(0);\n    }\n  };\n\n  const prevImage = () => {\n    if (currentImageIndex !== 0) {\n      setCurrentImageIndex((prevIndex) => Math.max(prevIndex - step, 0));\n    } else {\n      setCurrentImageIndex(maxCurrentImage);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-currentImageIndex * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img src={image} alt={(index + 1).toString()} width={itemWidth} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={prevImage}\n          disabled={currentImageIndex === 0 && !infinite}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={nextImage}\n          disabled={currentImageIndex === maxCurrentImage && !infinite}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Options.scss';\n\ntype Props = {\n  state: {\n    itemWidth: number;\n    frameSize: number;\n    step: number;\n    animationDuration: number;\n    infinite: boolean;\n  };\n  images: string[];\n  setState: (state: {\n    itemWidth: number;\n    frameSize: number;\n    step: number;\n    animationDuration: number;\n    infinite: boolean;\n  }) => void;\n};\n\nexport const Options: React.FC<Props> = ({\n  state,\n  images,\n  setState,\n}) => {\n  const {\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n    infinite,\n  } = state;\n\n  return (\n    <div className=\"options\">\n      <label htmlFor=\"itemId\" className=\"options__label\">\n        Item Width:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"itemId\"\n          value={itemWidth}\n          min={130}\n          max={260}\n          step={10}\n          onChange={\n            (event) => setState({ ...state, itemWidth: +event.target.value })\n          }\n        />\n      </label>\n\n      <label htmlFor=\"frameId\" className=\"options__label\">\n        Frame Size:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"frameId\"\n          value={frameSize}\n          min={1}\n          max={images.length}\n          step={1}\n          onChange={\n            (event) => setState({ ...state, frameSize: +event.target.value })\n          }\n        />\n      </label>\n\n      <label htmlFor=\"stepId\" className=\"options__label\">\n        Step:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"stepId\"\n          value={step}\n          min={1}\n          max={images.length}\n          step={1}\n          onChange={\n            (event) => setState({ ...state, step: +event.target.value })\n          }\n        />\n      </label>\n\n      <label htmlFor=\"animationId\" className=\"options__label\">\n        AnimationDuration:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"animationId\"\n          value={animationDuration}\n          min={500}\n          max={5000}\n          step={500}\n          onChange={\n            (event) => setState(\n              { ...state, animationDuration: +event.target.value },\n            )\n          }\n        />\n      </label>\n\n      <label htmlFor=\"infinityId\" className=\"options__label\">\n        Infinite:\n        <input\n          type=\"checkbox\"\n          id=\"infinityId\"\n          checked={infinite}\n          onChange={() => setState({ ...state, infinite: !infinite })}\n        />\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Options } from './components/Options/Options';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst initialState = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nconst App: React.FC = () => {\n  const [state, setState] = useState(initialState);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <Carousel\n        images={images}\n        {...state}\n      />\n\n      <Options\n        images={images}\n        state={state}\n        {...state}\n        setState={setState}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}