{"version":3,"sources":["components/Carousel.tsx","components/Options/Options.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImageIndex","setCurrentImageIndex","maxCurrentImage","length","className","style","width","transition","map","image","index","transform","src","alt","toString","type","onClick","prevIndex","Math","max","disabled","min","Options","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","htmlFor","id","value","onChange","event","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed25d68e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const maxCurrentImage = images.length - frameSize;\n\n  const nextImage = () => {\n    if (currentImageIndex !== maxCurrentImage) {\n      setCurrentImageIndex(\n        (prevIndex) => Math.min(prevIndex + step, maxCurrentImage),\n      );\n    } else {\n      setCurrentImageIndex(0);\n    }\n  };\n\n  const prevImage = () => {\n    if (currentImageIndex !== 0) {\n      setCurrentImageIndex((prevIndex) => Math.max(prevIndex - step, 0));\n    } else {\n      setCurrentImageIndex(maxCurrentImage);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-currentImageIndex * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img src={image} alt={(index + 1).toString()} width={itemWidth} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={prevImage}\n          disabled={currentImageIndex === 0 && !infinite}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={nextImage}\n          disabled={currentImageIndex === maxCurrentImage && !infinite}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Options.scss';\n\ntype Props = {\n  itemWidth: number;\n  setItemWidth: (e: number) => void;\n  frameSize: number;\n  setFrameSize: (e: number) => void;\n  images: string[];\n  step: number;\n  setStep: (e: number) => void;\n  animationDuration: number;\n  setAnimationDuration: (e: number) => void;\n  setInfinite: (e: boolean) => void;\n};\n\nexport const Options: React.FC<Props> = ({\n  itemWidth,\n  setItemWidth,\n  frameSize,\n  setFrameSize,\n  images,\n  step,\n  setStep,\n  animationDuration,\n  setAnimationDuration,\n  setInfinite,\n}) => {\n  const infinite = false;\n\n  return (\n    <div className=\"options\">\n      <label htmlFor=\"itemId\" className=\"options__label\">\n        Item Width:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"itemId\"\n          value={itemWidth}\n          min={130}\n          max={260}\n          step={10}\n          onChange={(event) => setItemWidth(+event.target.value)}\n        />\n      </label>\n\n      <label htmlFor=\"frameId\" className=\"options__label\">\n        Frame Size:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"frameId\"\n          value={frameSize}\n          min={1}\n          max={images.length}\n          step={1}\n          onChange={(event) => setFrameSize(+event.target.value)}\n        />\n      </label>\n\n      <label htmlFor=\"stepId\" className=\"options__label\">\n        Step:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"stepId\"\n          value={step}\n          min={1}\n          max={images.length}\n          step={1}\n          onChange={(event) => setStep(+event.target.value)}\n        />\n      </label>\n\n      <label htmlFor=\"animationId\" className=\"options__label\">\n        AnimationDuration:\n        <input\n          className=\"options__input\"\n          type=\"number\"\n          id=\"animationId\"\n          value={animationDuration}\n          min={500}\n          max={5000}\n          step={500}\n          onChange={(event) => setAnimationDuration(+event.target.value)}\n        />\n      </label>\n\n      <label htmlFor=\"infinityId\" className=\"options__label\">\n        Infinite:\n        <input\n          type=\"checkbox\"\n          id=\"infinityId\"\n          onChange={() => setInfinite(!infinite)}\n        />\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Options } from './components/Options/Options';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1\n        data-cy=\"title\"\n      >\n        Carousel with\n        {images.length}\n        images\n      </h1>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n\n      <Options\n        itemWidth={itemWidth}\n        setItemWidth={setItemWidth}\n        frameSize={frameSize}\n        setFrameSize={setFrameSize}\n        images={images}\n        step={step}\n        setStep={setStep}\n        animationDuration={animationDuration}\n        setAnimationDuration={setAnimationDuration}\n        setInfinite={setInfinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}